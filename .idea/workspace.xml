<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="dfe1e22e-cb7d-4b1b-94af-4d8dc0cfa0b1" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/redux-version/src/components/Table-row.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/redux-version/src/components/Table.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data/rows-unminified.json.gz" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/rows.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/rows.json.gz" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/public/rows.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/features/roots/Results.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/features/roots/Results.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/features/roots/actions.ts" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/features/roots/actions.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/features/roots/reducer.ts" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/features/roots/reducer.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/features/roots/thunks.ts" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/features/roots/thunks.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/features/roots/types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/features/roots/types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/redux-version/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/redux-version/src/index.tsx" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ElmWorkspace">
    <elmProjects />
    <settings elmCompilerPath="" elmFormatPath="" elmTestPath="" isElmFormatOnSaveEnabled="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1aLjHJKgl4niUAdEsPTNTUdiRqH" />
  <component name="PropertiesComponent">
    <property name="DefaultHtmlFileTemplate" value="HTML File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="TEXT" />
    <property name="javascript.nodejs.core.library.configured.version" value="13.13.0" />
    <property name="js.linters.configure.manually.selectedeslint" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/redux-version/src/features/roots" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.standard" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="$USER_HOME$/.nvm/versions/node/v13.13.0/bin/node" />
    <property name="node.js.path.for.package.standard" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.standard" value="" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs.jest.jest_package" value="$PROJECT_DIR$/vanilla-static/node_modules/jest" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="prettierjs.PrettierConfiguration.Package" value="$PROJECT_DIR$/node_modules/prettier" />
    <property name="settings.editor.selected.configurable" value="preferences.sourceCode.TypeScript" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/redux-version/node_modules/typescript/lib" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/redux-version/src/features/roots" />
      <recent name="$PROJECT_DIR$/redux-version/src/features/search" />
      <recent name="$PROJECT_DIR$/inferno-js/src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/redux-version/src" />
      <recent name="$PROJECT_DIR$/redux-version/src/features/roots" />
      <recent name="$PROJECT_DIR$/redux-version/src/features/search" />
      <recent name="$PROJECT_DIR$/vanilla-static/src" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Jest.store.can retreive state">
    <configuration name="store.can retreive state" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/vanilla-static/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/vanilla-static" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/vanilla-static/src/__tests__/store.test.mjs" />
      <test-names>
        <test-name value="store" />
        <test-name value="can retreive state" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="extract-wikipedia-data.js" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/scripts/extract-wikipedia-data.js" working-dir="$PROJECT_DIR$/scripts">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.store.can retreive state" />
        <item itemvalue="Node.js.extract-wikipedia-data.js" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>